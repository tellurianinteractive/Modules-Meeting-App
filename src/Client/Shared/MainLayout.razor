@using Blazored.Toast.Configuration;
@using Tellurian.Trains.MeetingApp.Contracts.Models
@inherits LayoutComponentBase
@inject IStringLocalizer<App> Localizer
@inject RegistrationsService Registrations
@inject ClocksService Clocks

<PageTitle>@Localizer["AppName"]</PageTitle>

<BlazoredToasts RemoveToastsOnNavigation="true"
                Timeout="2" />

<div class="page">
    @if (IsDarkTheme)
    {
        <style>
            body {
                background-color: black;
            }
        </style>
    }
    <div class="sidebar">
        <NavMenu />
    </div>

    <main class="main @Registration?.Theme?.ToLowerInvariant()">
        <div class="content">
            @if (ServerVersion is null)
            {
                <p>@Localizer["PleaseWait"]</p>
            }
            else if (ServerVersion.IsCompatibleWithServerVersion())
            {
                @Body
            }
            else
            {
                <div>
                    <h1>You have an old client version</h1>
                    <p>Your version is @ClientVersion.VersionNumber.</p>
                    <p>Latest server version is @ServerVersion</p>
                    <p>This is usually caused by your browser cached a previous version.</p>
                    <p>
                        Please update your client application by doing a <strong>hard reload</strong>
                        in your browser.
                    </p>
                    <p>You find additional information in the <a target="_blank" href="https://github.com/tellurianinteractive/Tellurian.Trains.ModuleMeetingApp/blob/master/RELEASENOTES.md"><strong>release notes</strong></a></p>
                </div>
            }
        </div>
    </main>
</div>

@code {
    Registration? Registration;
    string? ServerVersion;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(ServerVersion)) ServerVersion = await Clocks.GetServerVersionAsync();
        if (Registration is null) Registration = await Registrations.GetAsync();

    }

    private bool IsDarkTheme => Theme.Dark.ToString().Equals(Registration?.Theme, StringComparison.OrdinalIgnoreCase);
}


